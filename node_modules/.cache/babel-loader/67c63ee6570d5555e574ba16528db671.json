{"ast":null,"code":"var _jsxFileName = \"/Users/esshwarkishore/Documents/Project/Food app /foodapp-client/src/components/screens/Homescreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllFood, getAllRestaurant } from '../../actions/foodActions.js'; // import samplepizzas from \"../../pizzasdata.js\"\n\nimport Restaurant from '../Restaurant';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport Filter from '../Fliter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Homescreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const foodstate = useSelector(state => state.getAllFoodReducer);\n  console.log(foodstate, \"foodstate\");\n  const {\n    food,\n    error,\n    loading\n  } = foodstate;\n  console.log(food, \"food reducer\");\n  useEffect(() => {\n    // dispatch(getAllFood())\n    dispatch(getAllRestaurant());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Homescreen, \"Hpk96ogdda7CZDly4KclGWwgYVk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Homescreen;\nexport default Homescreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"sources":["/Users/esshwarkishore/Documents/Project/Food app /foodapp-client/src/components/screens/Homescreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getAllFood","getAllRestaurant","Restaurant","Loading","Error","Filter","Homescreen","dispatch","foodstate","state","getAllFoodReducer","console","log","food","error","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,8BAA7C,C,CACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,SAAS,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,iBAAhB,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuB,WAAvB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,SAAjC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkB,cAAlB;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAU,IAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAhCD;;GAAMK,U;UACeR,W,EACCC,W;;;KAFhBO,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllFood, getAllRestaurant } from '../../actions/foodActions.js'\n// import samplepizzas from \"../../pizzasdata.js\"\nimport Restaurant from '../Restaurant'\nimport Loading from '../Loading'\nimport Error from '../Error'\nimport Filter from '../Fliter'\n\nconst Homescreen = () => {\n    const dispatch = useDispatch()\n    const foodstate = useSelector(state => state.getAllFoodReducer)\n    console.log(foodstate, \"foodstate\")\n    const { food, error, loading } = foodstate;\n    console.log(food, \"food reducer\")\n    useEffect(() => {\n        // dispatch(getAllFood())\n        dispatch(getAllRestaurant())\n    }, [])\n    return (\n        <div>\n            {/* <Filter />\n            <div className=\"row justify-content-center\">\n                {loading ?\n                    (\n                        <Loading />\n                    ) : error ? (\n                        <Error error='Something Went Wrong' />\n                    ) : (\n                        food.map((foods) => {\n                            return <div className=\"col-md-3 p-3 m-3\" key={food._id}>\n                                <div>\n                                    <Restaurant restaurant={foods} />\n                                </div>\n                            </div>\n                        })\n                    )\n                }\n            </div> */}\n        </div>\n    )\n}\n\nexport default Homescreen\n"]},"metadata":{},"sourceType":"module"}