{"ast":null,"code":"import{applyMiddleware,combineReducers,createStore}from\"redux\";import thunk from'redux-thunk';import{composeWithDevTools}from\"redux-devtools-extension\";import{getAllFoodReducer}from\"./reducers/foodReducers\";import{registerUserReducer}from\"./reducers/userReducers\";import{loginUserReducer}from\"./reducers/userReducers\";var finalReducer=combineReducers({getAllFoodReducer:getAllFoodReducer,registerUserReducer:registerUserReducer,loginUserReducer:loginUserReducer});var currentUser=localStorage.getItem('currentUser')?JSON.parse(localStorage.getItem('currentUser')):null;var initialState={loginUserReducer:{currentUser:currentUser}};var composeEnhancers=composeWithDevTools({});var store=createStore(finalReducer,initialState,composeEnhancers(applyMiddleware(thunk)));export default store;","map":{"version":3,"sources":["/Users/esshwarkishore/Documents/Project/Food app /foodapp-client/src/store.js"],"names":["applyMiddleware","combineReducers","createStore","thunk","composeWithDevTools","getAllFoodReducer","registerUserReducer","loginUserReducer","finalReducer","currentUser","localStorage","getItem","JSON","parse","initialState","composeEnhancers","store"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,eAA1B,CAA2CC,WAA3C,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,iBAAT,KAAkC,yBAAlC,CACA,OAASC,mBAAT,KAAoC,yBAApC,CACA,OAASC,gBAAT,KAAiC,yBAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAGP,eAAe,CAAC,CACjCI,iBAAiB,CAAEA,iBADc,CAEjCC,mBAAmB,CAAEA,mBAFY,CAGjCC,gBAAgB,CAAEA,gBAHe,CAAD,CAApC,CAMA,GAAME,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,CAAwF,IAA5G,CAEA,GAAMG,CAAAA,YAAY,CAAG,CAAEP,gBAAgB,CAAE,CAAEE,WAAW,CAAEA,WAAf,CAApB,CAArB,CACA,GAAMM,CAAAA,gBAAgB,CAAGX,mBAAmB,CAAC,EAAD,CAA5C,CACA,GAAMY,CAAAA,KAAK,CAAGd,WAAW,CAACM,YAAD,CAAeM,YAAf,CAA6BC,gBAAgB,CAACf,eAAe,CAACG,KAAD,CAAhB,CAA7C,CAAzB,CAEA,cAAea,CAAAA,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllFoodReducer } from \"./reducers/foodReducers\";\nimport { registerUserReducer } from \"./reducers/userReducers\";\nimport { loginUserReducer } from \"./reducers/userReducers\";\n\nconst finalReducer = combineReducers({\n    getAllFoodReducer: getAllFoodReducer,\n    registerUserReducer: registerUserReducer,\n    loginUserReducer: loginUserReducer\n})\n\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\n\nconst initialState = { loginUserReducer: { currentUser: currentUser } }\nconst composeEnhancers = composeWithDevTools({})\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}