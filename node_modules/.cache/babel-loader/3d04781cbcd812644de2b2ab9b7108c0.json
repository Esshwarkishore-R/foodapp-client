{"ast":null,"code":"import _regeneratorRuntime from\"/Users/esshwarkishore/Documents/Project/Food app /foodapp-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/esshwarkishore/Documents/Project/Food app /foodapp-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{BASE_URL}from'../constants';export var getAllFood=function getAllFood(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:'GET_FOOD_REQUEST'});_context.prev=1;_context.next=4;return axios.get(BASE_URL+'/api/food/getAllFood',{headers:{isLogin:false}});case 4:response=_context.sent;console.log(response);dispatch({type:'GET_FOOD_SUCCESS',payload:response.data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch({type:'GET_FOOD_FAILED',payload:_context.t0});case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getAllRestaurant=function getAllRestaurant(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:'GET_FOOD_REQUEST'});_context2.prev=1;_context2.next=4;return axios.get(BASE_URL+'/api/food/getAllRestaurant',{headers:{isLogin:false}});case 4:response=_context2.sent;console.log(response);dispatch({type:'GET_FOOD_SUCCESS',payload:response.data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);dispatch({type:'GET_FOOD_FAILED',payload:_context2.t0});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var filterFood=function filterFood(search,category){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var filteredFood,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch({type:'GET_FOOD_REQUEST'});_context3.prev=1;_context3.next=4;return axios.get('/api/food/getAllFood');case 4:response=_context3.sent;console.log(response.data,\"Response for the filter\");filteredFood=response.data.filter(function(food){return food.name.toLowerCase().includes(search);});if(category!='all'){filteredFood=response.data.filter(function(food){return food.category.toLowerCase()===category;});}dispatch({type:'GET_FOOD_SUCCESS',payload:filteredFood});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);dispatch({type:'GET_FOOD_FAILED',payload:_context3.t0});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var filterRestaurant=function filterRestaurant(search,category,filter){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var filteredFood,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:'GET_FOOD_REQUEST'});_context4.prev=1;_context4.next=4;return axios.get('/api/food/getAllRestaurant');case 4:response=_context4.sent;console.log(response.data,\"Response for the filter\");if(search){filteredFood=response.data.filter(function(food){return food.restaurant_name.toLowerCase().includes(search);});if(category!='all'){filteredFood=response.data.filter(function(food){return food.cuisine.toLowerCase()===category;});}}else if(filter=='high'){filteredFood=response.data.sort(function(a,b){return b.average_price-a.average_price;});console.log(\"ğŸš€ ~ file: foodActions.js ~ line 78 ~ filteredFood\",response,filteredFood);}else if(filter=='low'){filteredFood=response.data.sort(function(a,b){return a.average_price-b.average_price;});}dispatch({type:'GET_FOOD_SUCCESS',payload:filteredFood});_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](1);dispatch({type:'GET_FOOD_FAILED',payload:_context4.t0});case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[1,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/esshwarkishore/Documents/Project/Food app /foodapp-client/src/actions/foodActions.js"],"names":["axios","BASE_URL","getAllFood","dispatch","type","get","headers","isLogin","response","console","log","payload","data","getAllRestaurant","filterFood","search","category","filteredFood","filter","food","name","toLowerCase","includes","filterRestaurant","restaurant_name","cuisine","sort","a","b","average_price"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { BASE_URL } from '../constants';\nexport const getAllFood = () => async dispatch => {\n    dispatch({ type: 'GET_FOOD_REQUEST' })\n    try {\n        const response = await axios.get(BASE_URL + '/api/food/getAllFood', { headers: { isLogin: false } })\n        console.log(response);\n        dispatch({\n            type: 'GET_FOOD_SUCCESS',\n            payload: response.data\n        })\n    }\n    catch (error) {\n        dispatch({\n            type: 'GET_FOOD_FAILED',\n            payload: error\n        })\n    }\n}\n\nexport const getAllRestaurant = () => async dispatch => {\n    dispatch({ type: 'GET_FOOD_REQUEST' })\n    try {\n        const response = await axios.get(BASE_URL + '/api/food/getAllRestaurant', { headers: { isLogin: false } })\n        console.log(response);\n        dispatch({\n            type: 'GET_FOOD_SUCCESS',\n            payload: response.data\n        })\n    }\n    catch (error) {\n        dispatch({\n            type: 'GET_FOOD_FAILED',\n            payload: error\n        })\n    }\n}\n\nexport const filterFood = (search, category) => async dispatch => {\n    var filteredFood;\n    dispatch({ type: 'GET_FOOD_REQUEST' })\n    try {\n        const response = await axios.get('/api/food/getAllFood')\n        console.log(response.data, \"Response for the filter\");\n        filteredFood = response.data.filter(food => food.name.toLowerCase().includes(search))\n        if (category != 'all') {\n            filteredFood = response.data.filter(food => food.category.toLowerCase() === (category))\n        }\n        dispatch({\n            type: 'GET_FOOD_SUCCESS',\n            payload: filteredFood\n        })\n    }\n    catch (error) {\n        dispatch({\n            type: 'GET_FOOD_FAILED',\n            payload: error\n        })\n    }\n}\nexport const filterRestaurant = (search, category, filter) => async dispatch => {\n    var filteredFood;\n    dispatch({ type: 'GET_FOOD_REQUEST' })\n    try {\n        let response = await axios.get('/api/food/getAllRestaurant')\n        console.log(response.data, \"Response for the filter\");\n\n        if (search) {\n            filteredFood = response.data.filter(food => food.restaurant_name.toLowerCase().includes(search))\n            if (category != 'all') {\n                filteredFood = response.data.filter(food => food.cuisine\n                    .toLowerCase() === (category))\n            }\n        }\n        else if (filter == 'high') {\n            filteredFood = response.data.sort(function (a, b) {\n                return b.average_price - a.average_price;\n            });\n            console.log(\"ğŸš€ ~ file: foodActions.js ~ line 78 ~ filteredFood\", response, filteredFood)\n\n        }\n        else if (filter == 'low') {\n            filteredFood = response.data.sort(function (a, b) {\n                return a.average_price - b.average_price;\n            });\n\n        }\n        dispatch({\n            type: 'GET_FOOD_SUCCESS',\n            payload: filteredFood\n        })\n    }\n    catch (error) {\n        dispatch({\n            type: 'GET_FOOD_FAILED',\n            payload: error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}